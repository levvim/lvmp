# Levi Mangarin 2018 Wolchok Lab
## Analysis pipeline for preprocessing fastq files, calibrated for GRCh37 analysis

################################################################################
# Samples

if ' ' in str(config["samples"]):
    SAMPLE=config["samples"].split()
else:
    SAMPLE=config["samples"]

if ' ' in str(config["RID"]):
    RID=config["RID"].split()
else:
    RID=config["RID"]

sample=SAMPLE
################################################################################
# References

FILE=config["file"]

# refs for using grch37 b37 (broad)
REFS=config["refs"]
SCRIPTS=config["scripts"]

REF = os.path.join(REFS + "human_g1k_b37.fasta")
DBSNP138 = os.path.join(REFS + "dbsnp_138.b37.vcf")
DBSNP138e = os.path.join(REFS + "dbsnp_138.b37.excluding_sites_after_129.vcf")
COSMIC = os.path.join(REFS + "CosmicCodingMuts.vcf")
GOLD_INDELS = os.path.join(REFS + "Mills_and_1000G_gold_standard.indels.b37.vcf")
HAPMAP= os.path.join(REFS + "hapmap_3.3.b37.vcf")
OMNI= os.path.join(REFS + "1000G_omni2.5.b37.vcf")
P1000G= os.path.join(REFS + "1000G_phase1.snps.high_confidence.b37.vcf")
INTERVALS= os.path.join(REFS + "Broad.human.exome.b37.interval_list")

# Containers
CONTAINERS=config["containers"]
PREPRO=os.path.join(CONTAINERS + "dsprepro-1.1.simg")
CUTADAPT=os.path.join(CONTAINERS + "cutadapt-1.9.1.simg")
PICARD=os.path.join(CONTAINERS + "picard-latest.simg")
GATK=os.path.join(CONTAINERS + "gatk-3.4.simg")

#Illumina TruSeq adapters
ADAPTER_R1="AGATCGGAAGAGCACACGTCT"
ADAPTER_R2="AGATCGGAAGAGCGTCGTGTA"

################################################################################
rule all:
    input: 
        #expand(FILE + 'bqsr/{SAMPLE}.pp.bam', SAMPLE = sample) #fastq to preprocessed bam
        expand(FILE + 'fastq/{SAMPLE}.01.fastq', SAMPLE = sample) #convert bams back to fastq
        #expand(FILE + 'fastqc/{SAMPLE}_fastqc.html', SAMPLE = sample) #fastqc

################################################################################
#QC and prep 
rule FastQC:
    input: fastq = FILE + 'fastq/{sample}.fastq', file = FILE, prepro = PREPRO, refs=REFS
    output: fastq = FILE + 'fastqc/{sample)_fastqc.html'
    params:
        walltime="12:00", mem="8", name="sn.fastqc", threads="1"
    shell:
        "module add singularity; "
        "fq1={input.fastq1}; fq2={input.fastq2}; "
        "singularity exec --bind {input.file}:{input.file} --bind {input.refs}:{input.refs} {input.prepro} "
        "/FastQC/fastqc --noextract -o {input.file}fastqc/ {input.fastq}; "

#Convert to fastq (if given bam)
rule bamtofastq:
    input:
        bam=FILE + 'raw/{sample}.bam', file=FILE, prepro=PREPRO, picard=PICARD, refs=REFS
    output:
        L1 = FILE + 'fastq/{sample}.01.fastq', L2 = FILE + 'fastq/{sample}.02.fastq'
    params:
        walltime="08:00", mem="48", name="sn.s2f", threads="1"
    shell:
        "module add singularity; "
        "cd {input.file}; "
        "singularity exec --bind {input.file}:{input.file} --bind {input.refs}:{input.refs} {input.prepro} "
        "samtools sort -O bam {input.bam} -o {input.bam}.sort;"
        "singularity exec --bind {input.file}:{input.file} --bind {input.refs}:{input.refs} {input.prepro} "
        "samtools index {input.bam}.sort; "
        "singularity exec --bind {input.file}:{input.file} --bind {input.refs}:{input.refs} {input.picard} "
        "java -jar -Xmx{params.mem}g /usr/picard/picard.jar "
        "SamToFastq "
        "I={input.bam}.sort  "
        "FASTQ={output.L1}  "
        "SECOND_END_FASTQ={output.L2}  "
        #"OUTPUT_PER_RG=TRUE "
        #"RG_TAG=PU "

################################################################################
#Trim
rule cutadapt:
    input: 
        fastq1=FILE + 'fastq/{sample}.01.fastq', 
        fastq2=FILE + 'fastq/{sample}.02.fastq',
        file=FILE, cutadapt=CUTADAPT, refs=REFS
    output: 
        fastq1=temp(FILE + 'fastq/{sample}.01.trim.fastq'),
        fastq2=temp(FILE + 'fastq/{sample}.02.trim.fastq')
    params:
        walltime="12:00", mem="16", name="sn.cutadapt", adapter_r1=ADAPTER_R1, adapter_r2=ADAPTER_R2, threads="1"
    shell:
        "module add singularity; "
        "singularity exec --bind {input.file}:{input.file} --bind {input.refs}:{input.refs} {input.cutadapt} "
        "cutadapt -a {params.adapter_r1} -A {params.adapter_r2} "
        "-o {output.fastq1} -p {output.fastq2} "
        "--overlap 10 "
        "--minimum-length 20 "
        "--quality-cutoff 3 "
        "{input.fastq1} {input.fastq2}; "
        
################################################################################
# Align
rule bwa_mem:
    input: fastq = FILE + 'fastq/{sample}.01.fastq', 
        R1 = FILE + 'fastq/{sample}.01.trim.fastq', 
        R2 = FILE + 'fastq/{sample}.02.trim.fastq',
        scripts = SCRIPTS, ref = REF, file = FILE, prepro=PREPRO, refs=REFS
    output: temp(FILE + 'sam/{sample}.sam')
    params:
        walltime="48:00", mem="24", name="sn.bwa_mem", threads="1"
    shell:
        "module add singularity; "
        "{input.scripts}/RGfromFastq.sh {input.fastq} {input.fastq}.rg.txt; " 
        "readgroup=\"@RG\\tID:\"$(awk NR==4 {input.fastq}.rg.txt)\"\\tLB:\"$(awk NR==8 {input.fastq}.rg.txt)\"\\tPL:\"$(awk NR==2 {input.fastq}.rg.txt)\"\\tPU:\"$(awk NR==6 {input.fastq}.rg.txt)\"\\tSM:\"$(awk NR==7 {input.fastq}.rg.txt)\"\"; "
        "singularity exec --bind {input.file}:{input.file} --bind {input.refs}:{input.refs} {input.prepro} "
        "bwa mem {input.ref} -R \"$readgroup\" -M -t {params.threads} -P -v 3  "
        "{input.R1} "
        "{input.R2} "
        "> {output} "

################################################################################
rule samtobam:
    input: sam=FILE + 'sam/{sample}.sam', file=FILE, prepro=PREPRO, refs=REFS
    output: FILE + 'bam/{sample}.bam'
    params:
        walltime="96:00", mem="24", name="sn.s2b", threads="1"
    shell:
        "module add singularity; "
        "singularity exec --bind {input.refs}:{input.refs} --bind {input.file}:{input.file} {input.prepro} "
        "samtools view -Sb {input.sam} > {output}; "

rule merge_bam:
    input:
        bam = expand(FILE + 'bam/{SAMPLE}.{RUN}.bam', SAMPLE=sample, RUN=RID), 
        tmpdir = FILE + "tmp/", file=FILE, picard=PICARD, prepro=PREPRO, refs=REFS
    output:
         FILE + 'merge/{sample}.bam'
    params:
        walltime="12:00", mem="64", name="sn.merge", threads="1"
    run:
        inputstr = " ".join(["INPUT= {} ".format(x) for x in input.bam])
        shell("module add singularity; "
        "singularity exec --bind {input.file}:{input.file} --bind {input.refs}:{input.refs} {input.picard} "
        "java -jar -Xmx{params.mem}g /usr/picard/picard.jar "
        "MergeSamFiles "
        "{inputstr} "
        "O={output}  "
        "SORT_ORDER=coordinate  "
        "VALIDATION_STRINGENCY=LENIENT  "
        "CREATE_INDEX=true  "
        "USE_THREADING=false  "
        "TMP_DIR={input.tmpdir} "
        "#MAX_RECORDS_IN_RAM=5000000; ")

#################################################################################
# Sort and add Readgroups (performed in bwa step)

#rule clean_bam:
#    input:
#         FILE + 'bam/{sample}.bam', file=FILE, picard=PICARD, refs=REFS
#    output:
#         FILE + 'clean/{sample}.clean.bam
#    params:
#        walltime="04:00", mem="16", name="sn.clean"
#    shell:
#        #"module add singularity; "
#        #"singularity exec --bind {input.file}:{input.file} --bind {input.refs}:{input.refs} {input.picard} "
#        #"java -jar -Xmx{params.mem}g /usr/picard/picard.jar CleanSam INPUT={input} OUTPUT={output} "

rule sort:
    input:
         #bam=FILE + 'bam/{sample}.bam', file=FILE, prepro=PREPRO, refs=REFS #skip merge step if only one lane 
         bam=FILE + 'merge/{sample}.bam', file=FILE, prepro=PREPRO, refs=REFS
    output:
         FILE + 'sort/{sample}.sort.bam'
    params:
        walltime="96:00", mem="32", name="sn.sort", threads="1"
    shell:
        "module add singularity; "
        "singularity exec --bind {input.file}:{input.file} --bind {input.refs}:{input.refs} {input.prepro} "
        "samtools sort -O bam {input.bam} -o {output};"
        "singularity exec --bind {input.file}:{input.file} --bind {input.refs}:{input.refs} {input.prepro} "
        "samtools index {output} "


##################################################################################
#Indel Realignment, Base Square Recalibration, MarkDuplicates
rule index_and_realign_info:
    input:
        bam = FILE + 'sort/{sample}.sort.bam', ref = REF, dbsnp = DBSNP138e, gold=GOLD_INDELS, file=FILE, gatk=GATK, refs=REFS
    output:
        FILE + 'indelrealign/{sample}.sort.intervals'
    params:
        walltime="24:00", mem="24", name="sn.ri", threads="4"
    shell:
        "module add singularity; "
        "singularity exec --bind {input.file}:{input.file} --bind {input.refs}:{input.refs} {input.gatk} "
        "java -Xmx{params.mem}G -jar /home/biodocker/bin/gatk/target/GenomeAnalysisTK.jar "
        "-T RealignerTargetCreator "
        "-R {input.ref} "
        "-I {input.bam} "
        "--known {input.dbsnp} "
        "--known {input.gold} "
        "-S LENIENT "
        "-nt {params.threads} "
        "--downsampling_type NONE "
        "-o {output} "

rule realign_bam:
    input:
        bam = FILE + 'sort/{sample}.sort.bam', ref = REF, intervals = FILE + 'indelrealign/{sample}.sort.intervals', dbsnp = DBSNP138e, gold = GOLD_INDELS, file=FILE, gatk=GATK, prepro=PREPRO, refs=REFS
    output:
        FILE + 'indelrealign/{sample}.sort.ir.bam'
    params:
        walltime="24:00", mem="24", name="sn.rb", threads="1"
    shell:
        "module add singularity; "
        "singularity exec --bind {input.file}:{input.file} --bind {input.refs}:{input.refs} {input.gatk} "
        "java -Xmx{params.mem}G -jar /home/biodocker/bin/gatk/target/GenomeAnalysisTK.jar "
        "-T IndelRealigner "
        "-R {input.ref} "
        "-I {input.bam} "
        "-nt {threads} "
        "-known {input.dbsnp} "
        "-known {input.gold} "
        "--maxReadsForRealignment 500000 "
        "--maxReadsInMemory 3000000 "
        "--maxReadsForConsensuses 500000 "
        "-targetIntervals {input.intervals} "
        "-rf BadCigar "
        "-S LENIENT "
        "-o {output}; "
        #"singularity exec --bind  {input.file}:{input.file} --bind {input.refs}:{input.refs} {input.prepro} "
        #"samtools index {output}"

rule fixmateinfo_bam:
    input:
         bam = FILE + 'indelrealign/{sample}.sort.ir.bam', tmpdir = FILE + "tmp/", file=FILE, picard=PICARD, refs=REFS
    output:
         FILE + 'indelrealign/{sample}.sort.ir.fmi.bam'
    params:
        walltime="24:00", mem="24", name="sn.fmi", threads="1"
    shell:
        "module add singularity; "
        "singularity exec --bind {input.file}:{input.file} --bind {input.refs}:{input.refs} {input.picard} "
        "java -jar -Xmx{params.mem}g /usr/picard/picard.jar "
        "FixMateInformation "
        "I={input.bam} "
        "O={output} "
        "SORT_ORDER=coordinate "
        "CREATE_INDEX=true "
        "MAX_RECORDS_IN_RAM=5000000 "
        "VALIDATION_STRINGENCY=LENIENT "
        "TMP_DIR={input.tmpdir} "

rule markduplicates:
    input:
         bam = FILE + 'indelrealign/{sample}.sort.ir.bam', tmpdir = FILE + "tmp/", file = FILE, picard=PICARD, prepro=PREPRO, refs=REFS
         #bam = FILE + 'indelrealign/{sample}.sort.ir.fmi.bam', tmpdir = FILE + "tmp/", file = FILE, picard=PICARD, prepro=PREPRO, refs=REFS
    output:
         FILE + 'markdup/{sample}.sort.ir.fmi.md.bam'
    params: 
        walltime="12:00", mem="24", name="sn.md", threads="1"
    shell:
        "module add singularity; "
        "singularity exec --bind {input.file}:{input.file} --bind {input.refs}:{input.refs} {input.picard} "
        "java -jar -Xmx{params.mem}g /usr/picard/picard.jar "
        "MarkDuplicates "
        "I={input.bam} "
        "O={output} "
        "METRICS_FILE={output}.metrics.txt "
        "MAX_FILE_HANDLES_FOR_READ_ENDS_MAP=1000 "
        "TMP_DIR={input.tmpdir}; "
        "module add singularity; "
        "singularity exec --bind {input.file}:{input.file} --bind {input.refs}:{input.refs} {input.prepro} "
        "samtools index {output}"
        #"REMOVE_DUPLICATES=true "

# BQSR
rule baserecalibrator:
    input:
        bam = FILE + 'markdup/{sample}.sort.ir.fmi.md.bam', ref = REF,  dbsnp = DBSNP138e, gold = GOLD_INDELS, hapmap=HAPMAP, omni = OMNI, p1000g = P1000G, file=FILE, gatk=GATK, refs=REFS
    output:
        FILE + 'bqsr/{sample}.sort.ir.fmi.md.bam.recal_data.table'
    params:
        walltime="12:00", mem="24", name="sn.br", threads="4"
    shell:
        "module add singularity; "
        "singularity exec --bind {input.file}:{input.file} --bind {input.refs}:{input.refs} {input.gatk} "
        "java -Xmx{params.mem}G -jar /home/biodocker/bin/gatk/target/GenomeAnalysisTK.jar "
        " -T BaseRecalibrator "
        " -l INFO "
        " -R {input.ref} "
        " -I {input.bam} "
        " -knownSites {input.dbsnp} "
        " -knownSites {input.gold} "
        " -knownSites {input.hapmap} "
        " -knownSites {input.omni} "
        " -knownSites {input.p1000g} "
        " --covariate ContextCovariate "
        " --covariate CycleCovariate "
        " --covariate QualityScoreCovariate "
        " -rf BadCigar "
        " -o {output} "
        " -S LENIENT "
        " -nct {params.threads} "

#BQSR for second pass (gatk best practices metrics method)
#       "-o {output}.recal_data.table "
#        ""
#        "module add singularity; "
#        "singularity exec --bind {input.file}:{input.file} --bind {input.refs}:{input.refs} {input.gatk} "
#        "java -Xmx{params.mem}G -jar /home/biodocker/bin/gatk/target/GenomeAnalysisTK.jar "
#        "-T BaseRecalibrator "
#        "-R {input.ref} "
#        "-I {input.bam} "
#        "-knownSites {input.dbsnp} "
#        "-knownSites {input.gold} "
#        "-BQSR {output}.recal_data.table "
#        "-o {output} "
#        "-nct {threads}; "
#

rule printreads:
    input:
        bam = FILE + 'markdup/{sample}.sort.ir.fmi.md.bam', br = FILE + 'bqsr/{sample}.sort.ir.fmi.md.bam.recal_data.table', ref = REF,  dbsnp = DBSNP138e, file = FILE, gatk=GATK, prepro=PREPRO, refs=REFS
    output:
        FILE + 'bqsr/{sample}.pp.bam'
    params:
        walltime="12:00", mem="24", name="sn.pr", threads="4"
    shell:
        "module add singularity; "
        "singularity exec --bind {input.file}:{input.file} --bind {input.refs}:{input.refs} {input.gatk} "
        "java -Xmx{params.mem}G -jar /home/biodocker/bin/gatk/target/GenomeAnalysisTK.jar "
        " -T PrintReads "
        " -R {input.ref} "
        " -I {input.bam} "
        " -BQSR {input.br} "
        " -o {output} "
        " --emit_original_quals "
        " -rf BadCigar "
        " --downsampling_type NONE "
        " -nct {params.threads}; "
        " singularity exec --bind {input.file}:{input.file} --bind {input.refs}:{input.refs} {input.prepro}"
        " samtools index {output}"

#################################################################################
#################################################################################
#################################################################################
#################################################################################
#################################################################################
#################################################################################
#################################################################################
#################################################################################
#################################################################################
#################################################################################
#################################################################################
