#levi mangarin wolchok lab 2018
# lvmp ssc Snakefile_ssc

################################################################################
# Samples

if ' ' in str(config["samples"]):
    SAMPLE=config["samples"].split()
else:
    SAMPLE=config["samples"]

if ' ' in str(config["RID"]):
    RID=config["RID"].split()
else:
    RID=config["RID"]

sample=SAMPLE
print(SAMPLE)
print(RID)
################################################################################
# Generate list of samples given RID

SAMPLEWITHRG=[]

for s, r in zip(SAMPLE, RID):
    r=int(r[-1:])
    rg=list(range(r+1))
    rg.pop(0)
    for i in rg:
        out = s + "." + "L" + str(i)
        SAMPLEWITHRG.append(out)

print(SAMPLEWITHRG)

def RGfromS (sid, srg):
    rg=[i.split('.', 2)[2] for i in srg]
    print(rg)
    s1=[i.split('.', 2)[0] for i in srg]
    s2=[i.split('.', 2)[1] for i in srg]
    s=['.'.join((first,second)) for first, second in zip(s1, s2)]

    print(s)

    rid=[]
    for i in range(0,len(srg)):
        if s[i] == sid:
            rid.append(rg[i])
    print(rid)
    return rid

SAMPLENOTN=[s.replace('.T', '') for s in sample]
SAMPLENOTN=[s.replace('.N', '') for s in SAMPLENOTN]
################################################################################
# References

FILE=config["file"]
REFS=config["refs"]
SCRIPTS=config["scripts"]

## refs for using grch37 hg19 (human)
REFK = os.path.join(REFS + "Mus_musculus.GRCm38.cdna.all.idx")
WHITELIST = os.path.join(REFS + "10xv2_whitelist.txt")
T2G = os.path.join(REFS + "mm10_t2g.txt")

# Containers
CONTAINERS=config["containers"]
CELLRANGER=os.path.join(CONTAINERS + "cellranger-3.1.0.simg")
MIXCR=os.path.join(CONTAINERS + "mixcr-3.0.9.simg")
VDJTOOLS=os.path.join(CONTAINERS + "vdjtools-1.2.1.simg")

################################################################################
rule all:
    input: 
        expand(FILE + "cr/{SAMPLE}/outs/filtered_feature_bc_matrix/matrix.mtx.gz.out",  SAMPLE = sample)

################################################################################

rule cr_count:
    input: sample = FILE + 'raw/{sample}/{sample}.txt', file=FILE, refs=REFS, containers=CONTAINERS, cellranger=CELLRANGER
    output:
        FILE + 'cr/{sample}/outs/filtered_feature_bc_matrix/matrix.mtx.gz.out'
    params:
        walltime="24:00", mem="32", name="sn.cr", threads="8"
    shell:
        "module add singularity; "
        "SAMPLE={input.sample}; "
        "SAMPLE_FIXED=${{SAMPLE%%.*}}; "
        "SAMPLE_FIXED=${{SAMPLE_FIXED##*/}}; "
        "rm -rf {input.file}/cr/\"$SAMPLE_FIXED\"; "
        "cd {input.file}/cr/; "
        "singularity exec --bind {input.file}:{input.file} --bind {input.refs}:{input.refs} {input.cellranger} "
        "   /cellranger-3.1.0/cellranger count "
        "   --id=\"$SAMPLE_FIXED\" "
        "   --transcriptome={input.refs}/refdata-cellranger-mm10-3.0.0 "
        "   --fastqs={input.file}raw/\"$SAMPLE_FIXED\" "
        "   --sample=\"$SAMPLE_FIXED\" "
        "   --expect-cells=1000 "
        "   --localcores={params.threads}; "
        "touch {output}"

################################################################################
################################################################################
################################################################################
################################################################################
################################################################################
################################################################################
################################################################################
################################################################################
################################################################################
################################################################################
