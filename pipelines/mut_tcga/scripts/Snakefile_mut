# Levi Mangarin 2017 wolchok lab
## Mutational analysis pipeline for preprocessed fastq files, calibrated for b37 analysis

#################################################################################
# Samples

if ' ' in str(config["samples"]):
    SAMPLE=config["samples"].split()
else:
    SAMPLE=config["samples"]

if ' ' in str(config["RID"]):
    RID=config["RID"].split()
else:
    RID=config["RID"]

sample=SAMPLE
#################################################################################
# References

FILE=config["file"]

# refs for using grch37 b37 (broad)
REFS=config["refs"]
SCRIPTS=config["scripts"]

# refs for using grch37 b37 (broad)
REF = os.path.join(REFS + "human_g1k_b37.fasta")
DBSNP138 = os.path.join(REFS + "dbsnp_138.b37.vcf")
DBSNP138e = os.path.join(REFS + "dbsnp_138.b37.excluding_sites_after_129.vcf")
DBSNP132 = os.path.join(REFS + "dbsnp_132_b37.leftAligned.vcf")
COSMIC = os.path.join(REFS + "b37_cosmic_v54_120711.vcf")
COSMIC = os.path.join(REFS + "CosmicCodingMuts_b37.vcf")
GOLD_INDELS = os.path.join(REFS + "Mills_and_1000G_gold_standard.indels.b37.vcf")
INTERVALS= os.path.join(REFS + "Broad.human.exome.b37.interval_list")
REGION_b37="1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 X Y MT".split()
region=REGION_b37
 
# Containers
CONTAINERS=config["containers"]
PREPRO=os.path.join(CONTAINERS + "dsprepro-1.1.simg")
CUTADAPT=os.path.join(CONTAINERS + "cutadapt-1.9.1.simg")
PICARD=os.path.join(CONTAINERS + "picard-latest.simg")
GATK=os.path.join(CONTAINERS + "gatk-4.0.1.2.simg")
MUTECT=os.path.join(CONTAINERS + "mutect-latest.simg")
BCFTOOLS=os.path.join(CONTAINERS + "bcftools-1.3.1.simg")
MUSE=os.path.join(CONTAINERS + "muse-v0.1.1.simg")

#################################################################################
rule all:
    input: 
        expand(FILE + 'muTect/{SAMPLE}.{REGION}.T.vcf', SAMPLE=sample, REGION=region)
        #expand(FILE + 'muTect/{sample}.vcf', SAMPLE=sample),
        #expand(FILE + 'HC/{SAMPLE}.T.vcf', SAMPLE=sample)

#################################################################################
#rule readgroups_bam:
#    input:
#        fastqrg = FILE + 'fastq/{sample}.L1.01.fastq.rg.txt', bam = FILE + "bqsr/{sample}.pp.bam", tmpdir = FILE + "tmp/", file=FILE, refs=REFS, prepro=PREPRO, picard=PICARD, scripts=SCRIPTS
#    output:
#        FILE + "bqsr/{sample}.pp.rg.bam"
#    threads: 1
#    params:
#        walltime="06:00", mem="16", name="sn.rg", threads="1"
#    shell:
#        "module add singularity/2.4.2; "
#        "singularity exec --bind {input.file}:{input.file} --bind {input.refs}:{input.refs} {input.picard} "
#        "bash -c \"java -Xmx{params.mem}g -jar /usr/picard/picard.jar AddOrReplaceReadGroups "
#        "I={input.bam} "
#        "O={output} "
#        "TMP_DIR={input.tmpdir} "
#        "RGID=$(awk \"NR==4\" {input.fastqrg}) "
#        "RGLB=$(awk \"NR==8\" {input.fastqrg}) "
#        "RGPL=$(awk \"NR==2\" {input.fastqrg}) "
#        "RGPU=$(awk \"NR==6\" {input.fastqrg}) "
#        "RGSM=$(awk \"NR==7\" {input.fastqrg}) \"; "
#        "singularity exec --bind {input.file}:{input.file} --bind {input.refs}:{input.refs} {input.prepro} "
#        "samtools index {output} "

################################################################################
# Mutation calling
rule MuSE:
    input:
         normal = FILE + 'bqsr/{sample}.N.pp.bam', tumor = FILE + 'bqsr/{sample}.T.pp.bam', file = FILE, ref = REF, intervals = INTERVALS, dbsnp138 = DBSNP138e, dbsnp132 = DBSNP132, refs=REFS, muse=MUSE
    output:
         vcf=FILE + 'muse/{sample}.T.vcf', intermediate=FILE + 'muse/{sample}.T.intermediate.txt',
    threads: 1
    params:
         walltime="32:00", mem="32", name="sn.HC", threads="1"
    shell:
        "module add singularity/2.4.2; "
        "TUMOR={input.tumor}; NORMAL={input.normal}; "
        "TUMOR_FIXED=${{TUMOR%%.*}}; "
        "TUMOR_FIXED=${{TUMOR_FIXED##*/}}; "
        "NORMAL_FIXED=${{NORMAL%%.*}}; "
        "NORMAL_FIXED=${{NORMAL_FIXED##*/}}; "
        "singularity exec --bind {input.file}:{input.file} --bind {input.refs}:{input.refs} {input.muse} "
        "MuSE call "
        "-f {input.ref} "
        "{input.tumor} "
        "{input.normal} "
        "-O {output.intermediate};"
        "singularity exec --bind {input.file}:{input.file} --bind {input.refs}:{input.refs} {input.muse} "
        "MuSE sump "
        "-I {output.intermediate} "
        "-E "
        "-D {input.dbsnp} "
        "-O {output.vcf}; "

rule muTect2:
    input:
         normal = FILE + 'bqsr/{sample}.N.pp.rg.bam', tumor = FILE + 'bqsr/{sample}.T.pp.rg.bam', file = FILE, ref = REF, intervals = INTERVALS, dbsnp = DBSNP138e, refs=REFS, scripts=SCRIPTS, prepro=PREPRO, pon=PON, cosmic=COSMIC
    output:
         FILE + 'muTect2/{sample}.T.vcf'
    threads: 1
    params:
         walltime="08:00", mem="32", name="sn.mutect2", threads="1"
    shell:
        'module add singularity; '
        "TUMOR={input.tumor}; NORMAL={input.normal}; "
        "TUMOR_FIXED=${{TUMOR%%.*}}; "
        "TUMOR_FIXED=${{TUMOR_FIXED##*/}}; "
        "NORMAL_FIXED=${{NORMAL%%.*}}; "
        "NORMAL_FIXED=${{NORMAL_FIXED##*/}}; "
        "singularity exec --bind {input.file}:{input.file} --bind {input.scripts}:{input.scripts} {input.prepro} "
        'N_SM="$(samtools view -H {input.normal} | grep SM | awk \'{{print $5}}\' | cut -c4-)"; '
        "singularity exec --bind {input.file}:{input.file} --bind {input.scripts}:{input.scripts} {input.prepro} "
        'T_SM="$(samtools view -H {input.tumor} | grep SM | awk \'{{print $5}}\' | cut -c4-)";  '
        "singularity exec --bind {input.file}:{input.file} --bind {input.refs}:{input.refs} {input.gatk} "
        'singularity exec --bind {input.file}:{input.file} /data/wolchok/singularity/gatk-4.0.1.2.simg '
        'gatk Mutect2 '
        "-T MuTect2 "
        "-R {input.ref} "
        "-I:tumor {input.tumor} "
        "-I:normal {input.tumor} "
        "--normal_panel {input.pon} "
        "--cosmic {input.cosmic} "
        "--dbsnp {input.dbsnp} "
        "--contamination_fraction_to_filter 0.02 "
        "-o {output} "
        "--output_mode EMIT_VARIANTS_ONLY "
        "--disable_auto_index_creation_and_locking_when_reading_rods"

rule somaticsniper:
    input:
         normal = FILE + 'bqsr/{sample}.N.pp.bam', tumor = FILE + 'bqsr/{sample}.T.pp.bam', file = FILE, ref = REF, intervals = INTERVALS, dbsnp = DBSNP
    output:
         FILE + 'somaticsniper/{sample}.T.vcf'
    threads: 1
    params:
         walltime="08:00", mem="24", name="sn.somaticsniper", threads="1"
    shell:
        "$HOME/programs/somatic-sniper/build/bin/bam-somaticsniper "
        "-q 1 "
        "-L "
        "-G "
        "-Q 15 "
        "-s 0.01 "
        "-T 0.85 "
        "-N 2 "
        "-r 0.001 "
        "-n NORMAL "
        "-t TUMOR "
        "-F vcf "
        "-f {input.ref} "
        "{input.tumor} "
        "{input.normal} "
        "{output} "

rule varscan:
    input:
         normal = FILE + 'bqsr/{sample}.N.pp.bam', tumor = FILE + 'bqsr/{sample}.T.pp.bam', file=FILE, ref=REF, refs=REFS, varscan=VARSCAN, dbsnp138e = DBSNP138e
    output:
         FILE + 'varscan2/{sample}.T.vcf'
    params:
         walltime="32:00", mem="16", name="sn.varscan2_1", threads="1"
    shell:
        "module add singularity; "
        "singularity exec --bind {input.file}:{input.file} --bind {input.refs}:{input.refs} {input.varscan} "
        "samtools mpileup -f {input.ref} -q 1 -B {input.normal} {input.tumor} > {output}.mpileup;  "
        "singularity exec --bind {input.file}:{input.file} --bind {input.refs}:{input.refs} {input.varscan} "
        "java -jar -Xmx{params.mem}G -jar /opt/VarScan.jar somatic  "
        "{output}.mpileup  "
        "--output-snp {output} "
        "--mpileup      1  "
        "--min-coverage 8  "
        "--min-coverage-normal 8  "
        "--min-coverage-tumor 6  "
        "--min-var-freq 0.10  "
        "--min-freq-for-hom 0.75  "
        "--normal-purity 1.0  "
        "--tumor-purity 1.00  "
        "--p-value 0.99  "
        "--somatic-p-value 0.05  "
        "--strand-filter 0  "
        "--output-vcf; "
        "singularity exec --bind {input.file}:{input.file} --bind {input.refs}:{input.refs} {input.varscan} "
        "java -jar -Xmx{params.mem}G -jar /opt/VarScan.jar somatic  "
        "{output} "
        "--min-tumor-freq 0.10 "
        "--max-normal-freq 0.05 "
        "--p-value 0.07; "

################################################################################
################################################################################
################################################################################
################################################################################
################################################################################
################################################################################
################################################################################
################################################################################
################################################################################
################################################################################
