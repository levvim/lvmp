# Levi Mangarin 2017 wolchok lab
## Mutational analysis pipeline for preprocessed fastq files, calibrated for hg19 analysis

#################################################################################
# Samples

if ' ' in str(config["samples"]):
    SAMPLE=config["samples"].split()
else:
    SAMPLE=config["samples"]

if ' ' in str(config["RID"]):
    RID=config["RID"].split()
else:
    RID=config["RID"]

sample=SAMPLE
#################################################################################
# References

FILE=config["file"]

# refs for using grch37 b37 (broad)
REFS=config["refs"]
SCRIPTS=config["scripts"]

#refs for using grch37 hg19 (broad)
REF = os.path.join(REFS + "human_g1k_v37_decoy.fasta")
DBSNP138 = os.path.join(REFS + "dbsnp_138.b37.vcf")
COSMIC = os.path.join(REFS + "CosmicCodingMuts_v86.vcf")
GOLD_INDELS = os.path.join(REFS + "Mills_and_1000G_gold_standard.indels.b37.vcf")
INTERVALS= os.path.join(REFS + "Broad.human.exome.b37.interval_list")
REGION_b37="1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 X Y MT".split()
region=REGION_b37

# Containers
CONTAINERS=config["containers"]
PREPRO=os.path.join(CONTAINERS + "dsprepro-1.1.simg")
PICARD=os.path.join(CONTAINERS + "picard-latest.simg")
MUTECT=os.path.join(CONTAINERS + "mutect1-1.1.7.simg")
GATK=os.path.join(CONTAINERS + "gatk3-3.8-1.simg")

#################################################################################
rule all:
    input: 
        expand(FILE + 'strelka/{SAMPLE}.T/results/passed.somatic.snvs.vcf', SAMPLE=sample),
        expand(FILE + 'muTect/{SAMPLE}.T.vcf', SAMPLE=sample),
 
#################################################################################
## Combine readgroups
#rule readgroups_bam:
#    input:
#        fastqrg = FILE + 'fastq/{sample}.L1.01.fastq.rg.txt', bam = FILE + "bqsr/{sample}.pp.bam", tmpdir = FILE + "tmp/", file=FILE, refs=REFS, prepro=PREPRO, picard=PICARD, scripts=SCRIPTS
#    output:
#        FILE + "bqsr/{sample}.pp.rg.bam"
#    threads: 1
#    params:
#        walltime="06:00", mem="16", name="sn.rg", threads="1"
#    shell:
#        "module add singularity; "
#        "singularity exec --bind {input.file}:{input.file} --bind {input.refs}:{input.refs} {input.picard} "
#        "bash -c \"java -Xmx{params.mem}g -jar /usr/picard/picard.jar AddOrReplaceReadGroups "
#        "I={input.bam} "
#        "O={output} "
#        "TMP_DIR={input.tmpdir} "
#        "RGID=$(awk \"NR==4\" {input.fastqrg}) "
#        "RGLB=$(awk \"NR==8\" {input.fastqrg}) "
#        "RGPL=$(awk \"NR==2\" {input.fastqrg}) "
#        "RGPU=$(awk \"NR==6\" {input.fastqrg}) "
#        "RGSM=$(awk \"NR==7\" {input.fastqrg}) \"; "
#        "singularity exec --bind {input.file}:{input.file} {input.prepro} "
#        "samtools index {output} "

#################################################################################
# Mutation calling
rule muTect:
    input:
         normal = FILE + 'bqsr/{sample}.N.pp.bam', tumor = FILE + 'bqsr/{sample}.T.pp.bam', file = FILE, ref = REF, dbsnp = DBSNP138, cosmic=COSMIC, mutect=MUTECT, refs=REFS, scripts=SCRIPTS
    output:
         FILE + 'muTect/{sample}.T.vcf'
         #temp(expand(FILE + 'muTect/{{sample}}.{region}.T.vcf', region=REGION_b37))
    threads: 1
    params:
         walltime="32:00", mem="32", name="sn.mutect", threads="1"
    shell:
        "module add singularity; "
        "TUMOR={input.tumor}; NORMAL={input.normal}; "
        "TUMOR_FIXED=${{TUMOR%%.*}}; "
        "TUMOR_FIXED=${{TUMOR_FIXED##*/}}; "
        "NORMAL_FIXED=${{NORMAL%%.*}}; "
        "NORMAL_FIXED=${{NORMAL_FIXED##*/}}; "
        "singularity exec --bind {input.file}:{input.file} --bind {input.refs}:{input.refs} {input.mutect} "
        " java -jar -Xmx{params.mem}G /mutect-1.1.7.jar -T MuTect "
        " --reference_sequence {input.ref} "
        " --input_file:tumor {input.tumor} "
        " --input_file:normal {input.normal} "
        " --dbsnp {input.dbsnp} "
        " --cosmic {input.cosmic} "
        " -vcf {input.file}muTect/\"$TUMOR_FIXED\".T.vcf "
        " --out {input.file}muTect/\"$TUMOR_FIXED\".T.call_stats.txt " 
        " --coverage_file {input.file}muTect/\"$TUMOR_FIXED\".T.coverage.wig.txt; "

rule strelka:
    input:
         normal = FILE + 'bqsr/{sample}.N.pp.bam', tumor = FILE + 'bqsr/{sample}.T.pp.bam', file = FILE, scripts=SCRIPTS, refs=REFS, ref = REF, intervals = INTERVALS, dbsnp = DBSNP138
    output:
         FILE + 'strelka/{sample}.T/results/passed.somatic.snvs.vcf'
    threads: 4
    params:
         walltime="24:00", mem="8", name="sn.strelka", threads="12"
    shell:
        'module add singularity; '
        "TUMOR={input.tumor}; NORMAL={input.normal}; "
        "TUMOR_FIXED=${{TUMOR%%.*}}; "
        "TUMOR_FIXED=${{TUMOR_FIXED##*/}}; "
        "NORMAL_FIXED=${{NORMAL%%.*}}; "
        "NORMAL_FIXED=${{NORMAL_FIXED##*/}}; "
        'cd {input.file}strelka; '
        'rm -rf {input.file}strelka/\"$TUMOR_FIXED\".T/; ' 
        "cp $HOME/programs/strelka_workflow-1.0.15/etc/strelka_config_bwa_default.ini {input.file}/strelka/\"$TUMOR_FIXED\".config.ini; "
        "sed -i '13s/.*/isSkipDepthFilters = 1/' {input.file}/strelka/\"$TUMOR_FIXED\".config.ini; "
        "$HOME/programs/strelka_workflow-1.0.15/bin/configureStrelkaWorkflow.pl "
        "    --normal={input.normal} "
        "    --tumor={input.tumor} "
        "    --ref={input.ref} "
        "    --config={input.file}strelka/\"$TUMOR_FIXED\".config.ini "
        "    --output-dir={input.file}strelka/\"$TUMOR_FIXED\".T/; "
        "cd {input.file}strelka/\"$TUMOR_FIXED\".T/; "
        "make -j {threads}; "

################################################################################
################################################################################
################################################################################
################################################################################
################################################################################
################################################################################
################################################################################
################################################################################
################################################################################
################################################################################
################################################################################
################################################################################
